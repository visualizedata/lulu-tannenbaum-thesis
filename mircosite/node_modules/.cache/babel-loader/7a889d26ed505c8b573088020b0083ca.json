{"remainingRequest":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/babel-loader/lib/index.js!/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lulutanenbaum/Desktop/your-brain-on-politics/src/components/AnimatedLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/src/components/AnimatedLineChart.vue","mtime":1588111977997},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHNlbGVjdCwgc2NhbGVMaW5lYXIsIGxpbmUsIGF4aXNCb3R0b20sIGF4aXNMZWZ0LCBmb3JtYXQsIGV4dGVudCwgdGltZUZvcm1hdCwgZXZlbnQgfSBmcm9tICdkMyc7CmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydicmFpbkRhdGEnLCAncmVwb3J0WFNjYWxlJywgJ3VwZGF0ZVZpZGVvVGltZScsICdpZCddLAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnJlbmRlckNoYXJ0KHRoaXMuYnJhaW5EYXRhKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBmb3JtYXR0ZWRQZXJjZW50YWdlOiBmdW5jdGlvbiBmb3JtYXR0ZWRQZXJjZW50YWdlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKF8uaXNOaWwodGhpcy5zZWxlY3RlZElzc3VlKSkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgdmFyIGlzc3VlT2JqID0gXy5maW5kKHRoaXMuaXNzdWVzLCBmdW5jdGlvbiAoaSkgewogICAgICAgIHJldHVybiBpLmlzc3VlID09PSBfdGhpcy5zZWxlY3RlZElzc3VlOwogICAgICB9KTsKCiAgICAgIHJldHVybiBmb3JtYXQoJy4wJScpKGlzc3VlT2JqLnBlcmNlbnRhZ2UpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVuZGVyQ2hhcnQ6IGZ1bmN0aW9uIHJlbmRlckNoYXJ0KGJyYWluRGF0YSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHNlbGVjdCgiW2lkPVwiIi5jb25jYXQodGhpcy5pZCwgIlwiXS5saW5lY2hhcnQtc3ZnLWNvbnRhaW5lciBzdmciKSkuc2VsZWN0QWxsKCcqJykucmVtb3ZlKCk7CiAgICAgIHZhciBjb250YWluZXIgPSBzZWxlY3QoIltpZD1cIiIuY29uY2F0KHRoaXMuaWQsICJcIl0ubGluZWNoYXJ0LXN2Zy1jb250YWluZXIiKSkubm9kZSgpOwogICAgICB2YXIgbWFyZ2luID0gMzA7CiAgICAgIHZhciBzdmdXaWR0aCA9IGNvbnRhaW5lci5jbGllbnRXaWR0aDsKICAgICAgdmFyIHN2Z0hlaWdodCA9IHN2Z1dpZHRoICogMC42OwogICAgICB2YXIgY2hhcnRXaWR0aCA9IHN2Z1dpZHRoIC0gMiAqIG1hcmdpbjsKICAgICAgdmFyIGNoYXJ0SGVpZ2h0ID0gc3ZnSGVpZ2h0IC0gMiAqIG1hcmdpbjsKICAgICAgdmFyIHN2ZyA9IHNlbGVjdCgiW2lkPVwiIi5jb25jYXQodGhpcy5pZCwgIlwiXSBzdmciKSkuYXR0cignd2lkdGgnLCBzdmdXaWR0aCkuYXR0cignaGVpZ2h0Jywgc3ZnSGVpZ2h0KTsKICAgICAgdmFyIGNoYXJ0ID0gc3ZnLmFwcGVuZCgnZycpLmF0dHIoJ3RyYW5zZm9ybScsICJ0cmFuc2xhdGUoIi5jb25jYXQobWFyZ2luLCAiLCIpLmNvbmNhdChtYXJnaW4sICIpIikpOwogICAgICB2YXIgeVNjYWxlID0gc2NhbGVMaW5lYXIoKS5yYW5nZShbY2hhcnRIZWlnaHQsIDBdKS5kb21haW4oWy02MCwgOTBdKTsgLy8gLmRvbWFpbihbCiAgICAgIC8vICAgXy5taW5CeSh0aGlzLmNvbnRlbnQsICdORVMnKVsnTkVTJ10sCiAgICAgIC8vICAgXy5tYXhCeSh0aGlzLmNvbnRlbnQsICdORVMnKVsnTkVTJ10sCiAgICAgIC8vIF0pCgogICAgICBjaGFydC5hcHBlbmQoJ2cnKS5jYWxsKGF4aXNMZWZ0KHlTY2FsZSkudGlja3MoMCkpOwogICAgICB2YXIgeFNjYWxlID0gc2NhbGVMaW5lYXIoKS5yYW5nZShbMCwgY2hhcnRXaWR0aF0pLmRvbWFpbihleHRlbnQoYnJhaW5EYXRhLm1hcChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLm9mZnNldDsKICAgICAgfSkpKTsKICAgICAgY2hhcnQuYXBwZW5kKCdnJykuYXR0cigndHJhbnNmb3JtJywgInRyYW5zbGF0ZSgwLCAiLmNvbmNhdChjaGFydEhlaWdodCwgIikiKSkuYXR0cignY2xhc3MnLCAnYXhpcycpLmNhbGwoYXhpc0JvdHRvbSh4U2NhbGUpLnRpY2tGb3JtYXQoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gdGltZUZvcm1hdCgnJU06JVMnKShuZXcgRGF0ZSgwKS5zZXRTZWNvbmRzKGQpKTsKICAgICAgfSkpLnNlbGVjdEFsbCgndGV4dCcpLmF0dHIoJ3RyYW5zZm9ybScsICdyb3RhdGUoLTQ1KScpLnN0eWxlKCd0ZXh0LWFuY2hvcicsICdlbmQnKTsKICAgICAgY2hhcnQuYXBwZW5kKCdnJykuYXR0cigndHJhbnNmb3JtJywgInRyYW5zbGF0ZSgwLCAwKSIpLmF0dHIoJ2NsYXNzJywgJ2F4aXMnKS5jYWxsKGF4aXNMZWZ0KHlTY2FsZSkudGlja1ZhbHVlcyhbLTYwLCAtMzAsIDAsIDMwLCA2MCwgOTBdKS50aWNrRm9ybWF0KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuICIiLmNvbmNhdChkLCAiJSIpOwogICAgICB9KSk7CiAgICAgIGNoYXJ0LmFwcGVuZCgncGF0aCcpLmRhdHVtKGJyYWluRGF0YSkuYXR0cignY2xhc3MnLCAnbGluZScpLmF0dHIoJ2QnLCBsaW5lKCkueChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiB4U2NhbGUoZC5vZmZzZXQpOwogICAgICB9KS55KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHlTY2FsZShkLk5FUyk7CiAgICAgIH0pKTsKICAgICAgdmFyIHByb2dyZXNzT3ZlcmxheSA9IGNoYXJ0LmFwcGVuZCgncmVjdCcpLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMSwgMCknKS5hdHRyKCd3aWR0aCcsIGNoYXJ0V2lkdGgpLmF0dHIoJ2hlaWdodCcsIGNoYXJ0SGVpZ2h0KS5hdHRyKCdmaWxsJywgJ3doaXRlJyk7IC8vIGJlbmNobWFyawoKICAgICAgY2hhcnQuYXBwZW5kKCdwYXRoJykuZGF0dW0oYnJhaW5EYXRhKS5hdHRyKCdjbGFzcycsICdiZW5jaG1hcmstbGluZScpLmF0dHIoJ2QnLCBsaW5lKCkueChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiB4U2NhbGUoZC5vZmZzZXQpOwogICAgICB9KS55KHlTY2FsZSgwKSkpOwogICAgICBzdmcub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciB4T2Zmc2V0ID0gZXZlbnQub2Zmc2V0WCAtIG1hcmdpbjsKICAgICAgICB2YXIgbmV3VGltZSA9IHhTY2FsZS5pbnZlcnQoeE9mZnNldCk7CgogICAgICAgIF90aGlzMi51cGRhdGVWaWRlb1RpbWUoX3RoaXMyLmlkLCBuZXdUaW1lKTsKICAgICAgfSk7CgogICAgICB2YXIgZmlyc3QgPSBfLmhlYWQoYnJhaW5EYXRhKTsKCiAgICAgIHZhciBwRm9ybWF0ID0gZm9ybWF0KCcrLjAlJyk7CiAgICAgIHNlbGVjdChjb250YWluZXIpLnNlbGVjdCgnLmF2ZycpLmh0bWwocEZvcm1hdChfLmdldChmaXJzdCwgJ2F2ZXJhZ2UnKSkpOwogICAgICBzZWxlY3QoY29udGFpbmVyKS5zZWxlY3QoJy5tYXgnKS5odG1sKHBGb3JtYXQoXy5nZXQoZmlyc3QsICdtYXgnKSkpOwogICAgICB0aGlzLnJlcG9ydFhTY2FsZSh0aGlzLmlkLCBicmFpbkRhdGEsIHhTY2FsZSwgcHJvZ3Jlc3NPdmVybGF5KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["AnimatedLineChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :id=\"id\" class=\"linechart-svg-container\">\n    <svg />\n    <span class=\"legend\">Benchmark</span>\n    <span class=\"legend\">Neural Engagement</span>\n    <h5>Top Neural Engagement Scores</h5>\n    <p>\n      Current Second\n      <span class=\"time metadata\">0%</span>\n    </p>\n    <p>\n      Average Engagement\n      <span class=\"avg metadata\">+17%</span>Max Engagement\n      <span class=\"max metadata\">+54%</span>\n    </p>\n  </div>\n</template>\n\n<script>\nimport {\n  select,\n  scaleLinear,\n  line,\n  axisBottom,\n  axisLeft,\n  format,\n  extent,\n  timeFormat,\n  event,\n} from 'd3'\nimport _ from 'lodash'\nexport default {\n  props: ['brainData', 'reportXScale', 'updateVideoTime', 'id'],\n  mounted() {\n    this.renderChart(this.brainData)\n  },\n  computed: {\n    formattedPercentage: function() {\n      if (_.isNil(this.selectedIssue)) {\n        return ''\n      }\n      const issueObj = _.find(this.issues, i => i.issue === this.selectedIssue)\n      return format('.0%')(issueObj.percentage)\n    },\n  },\n  methods: {\n    renderChart(brainData) {\n      select(`[id=\"${this.id}\"].linechart-svg-container svg`)\n        .selectAll('*')\n        .remove()\n      const container = select(\n        `[id=\"${this.id}\"].linechart-svg-container`\n      ).node()\n      const margin = 30\n      const svgWidth = container.clientWidth\n\n      const svgHeight = svgWidth * 0.6\n      const chartWidth = svgWidth - 2 * margin\n      const chartHeight = svgHeight - 2 * margin\n\n      const svg = select(`[id=\"${this.id}\"] svg`)\n        .attr('width', svgWidth)\n        .attr('height', svgHeight)\n\n      const chart = svg\n        .append('g')\n        .attr('transform', `translate(${margin},${margin})`)\n\n      const yScale = scaleLinear()\n        .range([chartHeight, 0])\n        .domain([-60, 90])\n      // .domain([\n      //   _.minBy(this.content, 'NES')['NES'],\n      //   _.maxBy(this.content, 'NES')['NES'],\n      // ])\n\n      chart.append('g').call(axisLeft(yScale).ticks(0))\n\n      const xScale = scaleLinear()\n        .range([0, chartWidth])\n        .domain(extent(brainData.map(d => d.offset)))\n\n      chart\n        .append('g')\n        .attr('transform', `translate(0, ${chartHeight})`)\n        .attr('class', 'axis')\n        .call(\n          axisBottom(xScale).tickFormat(d =>\n            timeFormat('%M:%S')(new Date(0).setSeconds(d))\n          )\n        )\n        .selectAll('text')\n        .attr('transform', 'rotate(-45)')\n        .style('text-anchor', 'end')\n\n      chart\n        .append('g')\n        .attr('transform', `translate(0, 0)`)\n        .attr('class', 'axis')\n        .call(\n          axisLeft(yScale)\n            .tickValues([-60, -30, 0, 30, 60, 90])\n            .tickFormat(d => `${d}%`)\n        )\n\n      chart\n        .append('path')\n        .datum(brainData)\n        .attr('class', 'line')\n        .attr(\n          'd',\n          line()\n            .x(d => xScale(d.offset))\n            .y(d => yScale(d.NES))\n        )\n\n      const progressOverlay = chart\n        .append('rect')\n        .attr('transform', 'translate(1, 0)')\n        .attr('width', chartWidth)\n        .attr('height', chartHeight)\n        .attr('fill', 'white')\n\n      // benchmark\n      chart\n        .append('path')\n        .datum(brainData)\n        .attr('class', 'benchmark-line')\n        .attr(\n          'd',\n          line()\n            .x(d => xScale(d.offset))\n            .y(yScale(0))\n        )\n\n      svg.on('click', () => {\n        const xOffset = event.offsetX - margin\n        const newTime = xScale.invert(xOffset)\n        this.updateVideoTime(this.id, newTime)\n      })\n\n      const first = _.head(brainData)\n      const pFormat = format('+.0%')\n      select(container)\n        .select('.avg')\n        .html(pFormat(_.get(first, 'average')))\n      select(container)\n        .select('.max')\n        .html(pFormat(_.get(first, 'max')))\n\n      this.reportXScale(this.id, brainData, xScale, progressOverlay)\n    },\n  },\n}\n</script>\n<style>\n\n.linechart-svg-container h5 {\n  margin-top: 50px;\n}\n.linechart-svg-container span.metadata {\n  color: #a44b6d;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin: 0px 1.5rem;\n}\n\n.linechart-svg-container .axis path {\n  stroke: #e8ebef;\n}\n\n.linechart-svg-container .axis .tick line {\n  stroke: #e8ebef;\n}\n.linechart-svg-container .axis text {\n  font-size: 0.5rem;\n  fill: #5d697b;\n  stroke: none;\n}\n\npath.benchmark-line {\n  stroke: #3a3737;\n  stroke-dasharray: 3 1;\n  stroke-width: 0.75;\n  fill: none;\n}\n\n.linechart-svg-container .line {\n  stroke: #a44b6d;\n  fill: none;\n  stroke-width: 3;\n}\n\n.linechart-svg-container span.legend {\n  position: relative;\n  margin-left: 75px;\n  font-size: 0.5rem;\n  color: #5d697b;\n}\n.linechart-svg-container span.legend:nth-of-type(1) {\n  margin-left: 200px;\n}\n\n.linechart-svg-container span.legend:before {\n  content: '';\n  position: absolute;\n  bottom: 5px;\n  left: -50px;\n  width: 40px;\n}\n.linechart-svg-container span.legend:nth-of-type(1):before {\n  border-bottom: 1px dashed #3a3737;\n}\n.linechart-svg-container span.legend:nth-of-type(2):before {\n  border-bottom: 2px solid #a44b6d;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}