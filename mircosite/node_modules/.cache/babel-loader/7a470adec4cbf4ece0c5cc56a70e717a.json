{"remainingRequest":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/thread-loader/dist/cjs.js!/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/babel-loader/lib/index.js!/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lulutanenbaum/Desktop/your-brain-on-politics/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/src/App.vue","mtime":1588280137784},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvbHVsdXRhbmVuYmF1bS9EZXNrdG9wL3lvdXItYnJhaW4tb24tcG9saXRpY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQmFyQ2hhcnQgZnJvbSAnLi9jb21wb25lbnRzL0JhckNoYXJ0LnZ1ZSc7CmltcG9ydCBVbmNvbnNjaW91c0VuZ2FnbWVudCBmcm9tICcuL2NvbXBvbmVudHMvVW5jb25zY2lvdXNFbmdhZ21lbnQudnVlJzsKaW1wb3J0IExhbmRpbmcgZnJvbSAnLi9jb21wb25lbnRzL0xhbmRpbmcudnVlJzsKaW1wb3J0IERlc2NyaXB0aW9uIGZyb20gJy4vY29tcG9uZW50cy9EZXNjcmlwdGlvbi52dWUnOwppbXBvcnQgQW5hbHlzaXMgZnJvbSAnLi9jb21wb25lbnRzL0FuYWx5c2lzLnZ1ZSc7CmltcG9ydCBFeHBsb3JlIGZyb20gJy4vY29tcG9uZW50cy9FeHBsb3JlLnZ1ZSc7CmltcG9ydCBNZXRob2RvbG9neSBmcm9tICcuL2NvbXBvbmVudHMvTWV0aG9kb2xvZ3kudnVlJzsKaW1wb3J0IFBvcFVwIGZyb20gJy4vY29tcG9uZW50cy9Qb3BVcC52dWUnOwppbXBvcnQgSW50ZXJwcmV0YXRpb24gZnJvbSAnLi9jb21wb25lbnRzL0ludGVycHJldGF0aW9uLnZ1ZSc7CmltcG9ydCB7IGNzdiwgbmVzdCwgdGltZVBhcnNlIH0gZnJvbSAnZDMnOwppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwoKdmFyIGdldFBlcmNlbnREaWZmID0gZnVuY3Rpb24gZ2V0UGVyY2VudERpZmYoYSwgYikgewogIHJldHVybiAoYSAtIGIpIC8gKChhICsgYikgLyAyKSAqIDEwMDsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBjb21wb25lbnRzOiB7CiAgICBCYXJDaGFydDogQmFyQ2hhcnQsCiAgICBVbmNvbnNjaW91c0VuZ2FnbWVudDogVW5jb25zY2lvdXNFbmdhZ21lbnQsCiAgICBMYW5kaW5nOiBMYW5kaW5nLAogICAgRGVzY3JpcHRpb246IERlc2NyaXB0aW9uLAogICAgQW5hbHlzaXM6IEFuYWx5c2lzLAogICAgRXhwbG9yZTogRXhwbG9yZSwKICAgIE1ldGhvZG9sb2d5OiBNZXRob2RvbG9neSwKICAgIFBvcFVwOiBQb3BVcCwKICAgIEludGVycHJldGF0aW9uOiBJbnRlcnByZXRhdGlvbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBlcnJvcmVkOiBmYWxzZSwKICAgICAgaXNzdWVzOiBbXSwKICAgICAgYWR2ZXJ0aXNlbWVudHM6IFtdLAogICAgICBzaG93UG9wdXA6IGZhbHNlLAogICAgICBzaG93SG93VG9SZWFkOiBmYWxzZSwKICAgICAgcG9wdXBDb250ZW50OiBudWxsCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0SXNzdWVzKCk7CiAgICB0aGlzLmdldEFkdmVydGlzZW1lbnREYXRhKCk7CiAgfSwKICBjb21wdXRlZDogewogICAgdHJ1bXBBbmFseXNpczogZnVuY3Rpb24gdHJ1bXBBbmFseXNpcygpIHsKICAgICAgaWYgKF8uc2l6ZSh0aGlzLmFkdmVydGlzZW1lbnRzKSkgewogICAgICAgIHJldHVybiBfLmZpbmQodGhpcy5hZHZlcnRpc2VtZW50cywgZnVuY3Rpb24gKHYsIGspIHsKICAgICAgICAgIHJldHVybiBrLnNsaWNlKDEpID09PSAnNmdSbDhtbUtGenFTTkpRS0JPWlJzdSc7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfSwKICAgIGJsb29tYmVyZ0FuYWx5c2lzOiBmdW5jdGlvbiBibG9vbWJlcmdBbmFseXNpcygpIHsKICAgICAgaWYgKF8uc2l6ZSh0aGlzLmFkdmVydGlzZW1lbnRzKSkgewogICAgICAgIHJldHVybiBfLmZpbmQodGhpcy5hZHZlcnRpc2VtZW50cywgZnVuY3Rpb24gKHYsIGspIHsKICAgICAgICAgIHJldHVybiBrLnNsaWNlKDEpID09PSAnMlpTZlhmYzRtWjcxVTRrQjE3aVRJZic7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0SXNzdWVzOiBmdW5jdGlvbiBnZXRJc3N1ZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICBjc3YoJy9kYXRhL3N1cnZleURhdGEuY3N2JywgZnVuY3Rpb24gKGRhdHVtKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGlzc3VlOiBkYXR1bS5Jc3N1ZSwKICAgICAgICAgIHBlcmNlbnRhZ2U6ICtfLnJlcGxhY2UoZGF0dW0uUGVyY2VudGFnZSwgJyUnLCAnJykgLyAxMDAKICAgICAgICB9OwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIF90aGlzLmlzc3VlcyA9IF8uc2h1ZmZsZShkYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0QWR2ZXJ0aXNlbWVudERhdGE6IGZ1bmN0aW9uIGdldEFkdmVydGlzZW1lbnREYXRhKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHRhZ3MsIHRvcGxpbmVEYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMi5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGNzdignZGF0YS90YWdzRGF0YS5jc3YnKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgdGFncyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBjc3YoJ2RhdGEvdG9wbGluZURhdGEuY3N2Jyk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHRvcGxpbmVEYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNzdignL2RhdGEvYnJhaW5kYXRhLmNzdicsIGZ1bmN0aW9uIChkYXR1bSkgewogICAgICAgICAgICAgICAgICB2YXIgZGF0ZSA9IHRpbWVQYXJzZSgnJU06JVMnKShkYXR1bS5vZmZzZXQpOwoKICAgICAgICAgICAgICAgICAgdmFyIHRvcGxpbmVEYXR1bSA9IF8uZmluZCh0b3BsaW5lRGF0YSwgZnVuY3Rpb24gKGQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZC5jb250ZW50X2lkID09IGRhdHVtLmNvbnRlbnRfaWQ7CiAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICBjb250ZW50SWQ6IGRhdHVtLmNvbnRlbnRfaWQsCiAgICAgICAgICAgICAgICAgICAgbmFtZTogZGF0dW0ubmFtZSwKICAgICAgICAgICAgICAgICAgICB2aWRlb05hbWU6IGRhdHVtLnZpZGVvTmFtZSwKICAgICAgICAgICAgICAgICAgICBzYW1wbGVzOiArZGF0dW0uc2FtcGxlcywKICAgICAgICAgICAgICAgICAgICBORVM6IGdldFBlcmNlbnREaWZmKCtkYXR1bVsnTkVTIChOZXVyYWwgRW5nYWdlbWVudCBTY29yZSknXSwgK2RhdHVtWydCZW5jaG1hcmsnXSksCiAgICAgICAgICAgICAgICAgICAgdGFnczogXy5nZXQoXy5maW5kKHRhZ3MsIGZ1bmN0aW9uICh0KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdC5jb250ZW50X2lkID09IGRhdHVtLmNvbnRlbnRfaWQ7CiAgICAgICAgICAgICAgICAgICAgfSksICdpc3N1ZScpLAogICAgICAgICAgICAgICAgICAgIG9mZnNldDogZGF0ZS5nZXRNaW51dGVzKCkgKiA2MCArIGRhdGUuZ2V0U2Vjb25kcygpLAogICAgICAgICAgICAgICAgICAgIGF2ZXJhZ2U6IHRvcGxpbmVEYXR1bS5hdmVyYWdlLAogICAgICAgICAgICAgICAgICAgIG1heDogdG9wbGluZURhdHVtLm1heAogICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICBfdGhpczIubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICBfdGhpczIuYWR2ZXJ0aXNlbWVudHMgPSBuZXN0KCkua2V5KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQuY29udGVudElkOwogICAgICAgICAgICAgICAgICB9KS5tYXAoZGF0YSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHRvZ2dsZVNob3dQb3B1cDogZnVuY3Rpb24gdG9nZ2xlU2hvd1BvcHVwKCkgewogICAgICB0aGlzLnNob3dQb3B1cCA9ICF0aGlzLnNob3dQb3B1cDsKICAgIH0sCiAgICB0b2dnbGVTaG93SG93VG9SZWFkOiBmdW5jdGlvbiB0b2dnbGVTaG93SG93VG9SZWFkKCkgewogICAgICB0aGlzLnNob3dIb3dUb1JlYWQgPSAhdGhpcy5zaG93SG93VG9SZWFkOwogICAgfSwKICAgIHVwZGF0ZVBvcHVwQ29udGVudDogZnVuY3Rpb24gdXBkYXRlUG9wdXBDb250ZW50KGNvbnRlbnRJZCkgewogICAgICB2YXIgYWQgPSBfLmZpbmQodGhpcy5hZHZlcnRpc2VtZW50cywgZnVuY3Rpb24gKHYsIGspIHsKICAgICAgICByZXR1cm4gay5zbGljZSgxKSA9PT0gY29udGVudElkOwogICAgICB9KTsKCiAgICAgIHRoaXMucG9wdXBDb250ZW50ID0gYWQ7CiAgICB9LAogICAgZXhwbG9yZUFkOiBmdW5jdGlvbiBleHBsb3JlQWQoY29udGVudElkKSB7CiAgICAgIGNvbnNvbGUubG9nKCdjb250ZW50SUQnLCBjb250ZW50SWQpOwogICAgICB0aGlzLnRvZ2dsZVNob3dQb3B1cCgpOwogICAgICB0aGlzLnVwZGF0ZVBvcHVwQ29udGVudChjb250ZW50SWQpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <Landing />\n    <Description />\n    <div class=\"alert alert-info\" v-show=\"loading\">Loading...</div>\n    <BarChart :issues=\"issues\"></BarChart>\n    <UnconsciousEngagment />\n    <Analysis\n      :content=\"trumpAnalysis\"\n      id=\"trump\"\n      title=\"Trump's emphasis on the economy\"\n      description=\"This highly inspirational advertisement focuses on Trump’s achievements through the lens of the economy. The opening scenes (first 5 seconds) are the strongest moments with an aggregated +30% neural engagement score. Play the video or click on the chart to see the data transform.\"\n      :onMoreInfoClick=\"toggleShowHowToRead\"\n    />\n    <div id=\"tone\">\n      <h3>\n        Tone of voice is a another tool use to shape public opinion in political content. In the previous advertisement, Trump utilizes an inspirational tone, which our analysis found is an effective strategy. However, data indicated that a \n       <strong>fearful tone</strong> was even more <em><strong>engaging</strong></em>.\n      </h3>\n      <p>From an evolutionary psychology perspective, the emotion of fear can be adaptive because it focuses our attention to potential threats and, as a result, increases an organism’s odds of survival. </p>\n    </div>\n    <Analysis\n      :content=\"bloombergAnalysis\"\n      id=\"bloomberg\"\n      title=\"Bloomberg utilized fear in advertising\"\n      description=\"Bloomberg utilizes a fearful tone by highlighting Trump’s erratic and irrational behaviour. This highlights his inadequacies as President, inciting strong engagement. The creative tactics of strong audio/visual linkage underpins the success of the advertisement.\"\n      :onMoreInfoClick=\"toggleShowHowToRead\"\n    />\n    <Explore :onClick=\"exploreAd\" :ads=\"advertisements\" />\n    <Methodology />\n    <PopUp v-if=\"showPopup\" :content=\"popupContent\" :onClose=\"toggleShowPopup\" />\n    <Interpretation v-if=\"showHowToRead\" :onClose=\"toggleShowHowToRead\" />\n  </div>\n</template>\n\n<script>\nimport BarChart from './components/BarChart.vue'\nimport UnconsciousEngagment from './components/UnconsciousEngagment.vue'\nimport Landing from './components/Landing.vue'\nimport Description from './components/Description.vue'\nimport Analysis from './components/Analysis.vue'\nimport Explore from './components/Explore.vue'\nimport Methodology from './components/Methodology.vue'\nimport PopUp from './components/PopUp.vue'\nimport Interpretation from './components/Interpretation.vue'\nimport { csv, nest, timeParse } from 'd3'\nimport _ from 'lodash'\n\nconst getPercentDiff = (a, b) => ((a - b) / ((a + b) / 2)) * 100\n\nexport default {\n  name: 'App',\n  components: {\n    BarChart,\n    UnconsciousEngagment,\n    Landing,\n    Description,\n    Analysis,\n    Explore,\n    Methodology,\n    PopUp,\n    Interpretation,\n  },\n  data() {\n    return {\n      loading: false,\n      errored: false,\n      issues: [],\n      advertisements: [],\n      showPopup: false,\n      showHowToRead: false,\n      popupContent: null,\n    }\n  },\n  mounted() {\n    this.getIssues()\n    this.getAdvertisementData()\n  },\n  computed: {\n    trumpAnalysis: function() {\n      if (_.size(this.advertisements)) {\n        return _.find(\n          this.advertisements,\n          (v, k) => k.slice(1) === '6gRl8mmKFzqSNJQKBOZRsu'\n        )\n      }\n      return null\n    },\n    bloombergAnalysis: function() {\n      if (_.size(this.advertisements)) {\n        return _.find(\n          this.advertisements,\n          (v, k) => k.slice(1) === '2ZSfXfc4mZ71U4kB17iTIf'\n        )\n      }\n      return null\n    },\n  },\n  methods: {\n    getIssues() {\n      this.loading = true\n      csv('/data/surveyData.csv', datum => ({\n        issue: datum.Issue,\n        percentage: +_.replace(datum.Percentage, '%', '') / 100,\n      })).then(data => {\n        this.loading = false\n        this.issues = _.shuffle(data)\n      })\n    },\n    async getAdvertisementData() {\n      this.loading = true\n      const tags = await csv('data/tagsData.csv')\n      const toplineData = await csv('data/toplineData.csv')\n      csv('/data/braindata.csv', datum => {\n        const date = timeParse('%M:%S')(datum.offset)\n        const toplineDatum = _.find(\n          toplineData,\n          d => d.content_id == datum.content_id\n        )\n        return {\n          contentId: datum.content_id,\n          name: datum.name,\n          videoName: datum.videoName,\n          samples: +datum.samples,\n          NES: getPercentDiff(\n            +datum['NES (Neural Engagement Score)'],\n            +datum['Benchmark']\n          ),\n          tags: _.get(\n            _.find(tags, t => t.content_id == datum.content_id),\n            'issue'\n          ),\n          offset: date.getMinutes() * 60 + date.getSeconds(),\n          average: toplineDatum.average,\n          max: toplineDatum.max,\n        }\n      }).then(data => {\n        this.loading = false\n        this.advertisements = nest()\n          .key(d => d.contentId)\n          .map(data)\n      })\n    },\n    toggleShowPopup() {\n      this.showPopup = !this.showPopup\n    },\n    toggleShowHowToRead() {\n      this.showHowToRead = !this.showHowToRead\n    },\n    updatePopupContent: function(contentId) {\n      const ad = _.find(this.advertisements, (v, k) => k.slice(1) === contentId)\n      this.popupContent = ad\n    },\n    exploreAd(contentId) {\n      console.log('contentID', contentId)\n      this.toggleShowPopup()\n      this.updatePopupContent(contentId)\n    },\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Montserrat', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #ffffff;\n  background-color: #305581;\n  position: relative;\n}\n#app h1 {\n  font-size: 70px;\n}\n#app h2 {\n  font-size: 40px;\n  font-weight:700; \n}\n#app h3 {\n  font-size: 40px;\n}\n#app .full-height {\n  height: 100vh;\n}\n#app .close {\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n  -webkit-appearance: none;\n  border-radius: 50%;\n  border: 1px solid #305581;\n  height: 2rem;\n  width: 2rem;\n}\n\n#app #tone {\n  padding-top: 250px;\n  padding-bottom: 250px; \n  padding-left: 63px;\n  padding-right: 63px;\n  text-align: left;\n}\n\n#app #tone p {\n  width: 35%;\n  padding-top: 40px;  \n}\n\n</style>\n"],"sourceRoot":"src"}]}