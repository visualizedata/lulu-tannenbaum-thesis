{"remainingRequest":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lulutanenbaum/Desktop/your-brain-on-politics/src/components/PopUp.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/src/components/PopUp.vue","mtime":1587959556350},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBrZXlmcmFtZXMgc2xpZGVJblVwIHsKICBmcm9tIHsKICAgIHRvcDogMTAwJTsKICB9CiAgdG8gewogICAgdG9wOiAwcHg7CiAgfQp9CiNwb3B1cCB7CiAgaGVpZ2h0OiAxMDB2aDsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICAvKiBiYWNrZ3JvdW5kOiB1cmwoJy4uL2Fzc2V0cy9zY3JlZW5zaG90LnBuZycpOyAqLwogIGNvbG9yOiAjMzA1NTgxOwogIHRleHQtYWxpZ246IGxlZnQ7CiAgcGFkZGluZy1sZWZ0OiA2M3B4OwogIHBhZGRpbmctdG9wOiA2MHB4OwogIHBvc2l0aW9uOiBmaXhlZDsKICBsZWZ0OiAwcHg7CiAgYW5pbWF0aW9uOiBzbGlkZUluVXAgMC41cyBmb3J3YXJkczsKfQoKI3BvcHVwIGgyIHsKICBtYXJnaW4tYm90dG9tOiAycmVtOwp9CiNwb3B1cCAuZmxleC1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7Cn0KI3BvcHVwIC5mbGV4LWNvbnRhaW5lciA+IGRpdiB7CiAgZmxleDogMTsKfQojcG9wdXAgdmlkZW8gewogIHdpZHRoOiA5MiU7CiAgaGVpZ2h0OiBhdXRvOwogIG1hcmdpbi1ib3R0b206IDIuNXJlbTsKfQojcG9wdXAgI3RhZ3Mgc3BhbiB7CiAgcGFkZGluZzogMC4ycmVtIDAuNXJlbTsKICBib3JkZXItcmFkaXVzOiAxcmVtOwogIGJvcmRlcjogIzMwNTU4MSBzb2xpZCAxcHg7CiAgbWFyZ2luOiAwLjI1cmVtOwp9Cg=="},{"version":3,"sources":["PopUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PopUp.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"popup\">\n    <button class=\"close\" v-on:click=\"onClose\">X</button>\n    <h2>{{name}}</h2>\n    <div class=\"flex-container\">\n      <div>\n        <video\n          :id=\"id\"\n          controls\n          :src=\"`/videos/${videoName}.mp4`\"\n          type=\"video/mp4\"\n          :poster=\"`thumbnails/${videoName}.png`\"\n        />\n        <Tags v-bind:tags=\"tags\" />\n      </div>\n      <AnimatedLineChart\n        :id=\"id\"\n        v-if=\"content\"\n        :brainData=\"content\"\n        :reportXScale=\"reportXScale\"\n        :updateVideoTime=\"updateVideoTime\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash'\nimport AnimatedLineChart from './AnimatedLineChart'\nimport Tags from './Tags'\nimport { select, bisector, format } from 'd3'\n\nconst bisectOffset = bisector(d => d.offset).left\nexport const findCurrentScore = (time, brainData) => {\n  const closesIdx = bisectOffset(brainData, time)\n  return _.get(brainData[closesIdx], 'NES')\n}\nexport const percentageFormatter = format('+.2')\n\nexport default {\n  name: 'PopUp',\n  components: {\n    AnimatedLineChart,\n    Tags,\n  },\n  props: ['content', 'onClose'],\n  computed: {\n    id: function() {\n      return _.get(_.head(this.content), 'contentId')\n    },\n    name: function() {\n      return _.get(_.head(this.content), 'name')\n    },\n    videoName: function() {\n      return _.get(_.head(this.content), 'videoName')\n    },\n    tags: function() {\n      return _.split(_.get(_.head(this.content), 'tags'), '-')\n    },\n  },\n  methods: {\n    updateVideoTime(id, newTime) {\n      const videoElement = select(`[id=\"${id}\"]`).node()\n      videoElement.pause()\n      videoElement.currentTime = newTime\n    },\n    reportXScale(id, brainData, xScale, animationOverlay) {\n      this.registerVideoPlayback(id, brainData, xScale, animationOverlay)\n    },\n    registerVideoPlayback(id, brainData, xScale, animationOverlay) {\n      const videoElement = document.getElementById(id)\n      videoElement.ontimeupdate = () => {\n        animationOverlay\n          .transition()\n          .duration(250)\n          .attr('x', xScale(videoElement.currentTime))\n        const NES = findCurrentScore(videoElement.currentTime, brainData)\n        select(`[id=\"${this.id}\"] .time`).html(`${percentageFormatter(NES)}%`)\n      }\n    },\n  },\n}\n</script>\n\n<style>\n@keyframes slideInUp {\n  from {\n    top: 100%;\n  }\n  to {\n    top: 0px;\n  }\n}\n#popup {\n  height: 100vh;\n  background-color: white;\n  /* background: url('../assets/screenshot.png'); */\n  color: #305581;\n  text-align: left;\n  padding-left: 63px;\n  padding-top: 60px;\n  position: fixed;\n  left: 0px;\n  animation: slideInUp 0.5s forwards;\n}\n\n#popup h2 {\n  margin-bottom: 2rem;\n}\n#popup .flex-container {\n  display: flex;\n}\n#popup .flex-container > div {\n  flex: 1;\n}\n#popup video {\n  width: 92%;\n  height: auto;\n  margin-bottom: 2.5rem;\n}\n#popup #tags span {\n  padding: 0.2rem 0.5rem;\n  border-radius: 1rem;\n  border: #305581 solid 1px;\n  margin: 0.25rem;\n}\n</style>\n"]}]}