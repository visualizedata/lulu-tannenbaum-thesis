{"remainingRequest":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lulutanenbaum/Desktop/your-brain-on-politics/src/components/BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/src/components/BarChart.vue","mtime":1588276116968},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lulutanenbaum/Desktop/your-brain-on-politics/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgc2VsZWN0LAogIHNjYWxlTGluZWFyLAogIGF4aXNCb3R0b20sCiAgYXhpc0xlZnQsCiAgc2NhbGVCYW5kLAogIGZvcm1hdCwKfSBmcm9tICdkMycKaW1wb3J0IF8gZnJvbSAnbG9kYXNoJwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsnaXNzdWVzJ10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0OiBudWxsLAogICAgICBzZWxlY3RlZElzc3VlOiBudWxsLAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGZvcm1hdHRlZFBlcmNlbnRhZ2U6IGZ1bmN0aW9uKCkgewogICAgICBpZiAoXy5pc05pbCh0aGlzLnNlbGVjdGVkSXNzdWUpKSB7CiAgICAgICAgcmV0dXJuICcnCiAgICAgIH0KICAgICAgY29uc3QgaXNzdWVPYmogPSBfLmZpbmQodGhpcy5pc3N1ZXMsIGkgPT4gaS5pc3N1ZSA9PT0gdGhpcy5zZWxlY3RlZElzc3VlKQogICAgICByZXR1cm4gZm9ybWF0KCcuMCUnKShpc3N1ZU9iai5wZXJjZW50YWdlKQogICAgfSwKICB9LAogIHdhdGNoOiB7CiAgICBpc3N1ZXModmFsKSB7CiAgICAgIGlmICh0aGlzLmNoYXJ0ICE9PSBudWxsKSB0aGlzLmNoYXJ0LnJlbW92ZSgpCiAgICAgIHRoaXMucmVuZGVyQ2hhcnQodmFsLCB0aGlzLnNlbGVjdGVkSXNzdWUpCiAgICAgIHRoaXMuc2VsZWN0ZWRJc3N1ZSA9IF8uZmlyc3QodmFsKS5pc3N1ZQogICAgfSwKICAgIHNlbGVjdGVkSXNzdWUodmFsKSB7CiAgICAgIGlmICh0aGlzLmNoYXJ0ICE9PSBudWxsKSB0aGlzLmNoYXJ0LnJlbW92ZSgpCiAgICAgIHRoaXMucmVuZGVyQ2hhcnQodGhpcy5pc3N1ZXMsIHZhbCkKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICByZW5kZXJDaGFydChpc3N1ZXNWYWwsIHNlbGVjdGVkSXNzdWUpIHsKICAgICAgY29uc3QgY29udGFpbmVyID0gc2VsZWN0KCcjc3ZnLWNvbnRhaW5lcicpLm5vZGUoKQogICAgICBjb25zdCBtYXJnaW4gPSA2MAogICAgICBjb25zdCBzdmdXaWR0aCA9IGNvbnRhaW5lci5jbGllbnRXaWR0aAoKICAgICAgY29uc3Qgc3ZnSGVpZ2h0ID0gc3ZnV2lkdGggKiAwLjYKICAgICAgY29uc3QgY2hhcnRXaWR0aCA9IHN2Z1dpZHRoIC0gMiAqIG1hcmdpbgogICAgICBjb25zdCBjaGFydEhlaWdodCA9IHN2Z0hlaWdodCAtIDIgKiBtYXJnaW4KCiAgICAgIGNvbnN0IHN2ZyA9IHNlbGVjdCgnc3ZnJykKICAgICAgICAuYXR0cignd2lkdGgnLCBzdmdXaWR0aCkKICAgICAgICAuYXR0cignaGVpZ2h0Jywgc3ZnSGVpZ2h0KQoKICAgICAgdGhpcy5jaGFydCA9IHN2ZwogICAgICAgIC5hcHBlbmQoJ2cnKQogICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlKCR7bWFyZ2lufSwke21hcmdpbn0pYCkKCiAgICAgIGNvbnN0IHlTY2FsZSA9IHNjYWxlTGluZWFyKCkKICAgICAgICAucmFuZ2UoW2NoYXJ0SGVpZ2h0LCAwXSkKICAgICAgICAuZG9tYWluKFswLCBfLm1heEJ5KGlzc3Vlc1ZhbCwgJ3BlcmNlbnRhZ2UnKS5wZXJjZW50YWdlXSkKCiAgICAgIHRoaXMuY2hhcnQuYXBwZW5kKCdnJykuY2FsbChheGlzTGVmdCh5U2NhbGUpLnRpY2tzKDApKQoKICAgICAgY29uc3QgeFNjYWxlID0gc2NhbGVCYW5kKCkKICAgICAgICAucmFuZ2UoWzAsIGNoYXJ0V2lkdGhdKQogICAgICAgIC5kb21haW4oaXNzdWVzVmFsLm1hcChzID0+IHMuaXNzdWUpKQogICAgICAgIC5wYWRkaW5nKDAuMikKCiAgICAgIHRoaXMuY2hhcnQKICAgICAgICAuYXBwZW5kKCdnJykKICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSgwLCAke2NoYXJ0SGVpZ2h0fSlgKQogICAgICAgIC5jYWxsKAogICAgICAgICAgYXhpc0JvdHRvbSh4U2NhbGUpCiAgICAgICAgICAgIC50aWNrcygwKQogICAgICAgICAgICAudGlja1ZhbHVlcyhbXSkKICAgICAgICApCgogICAgICBjb25zdCBiYXJHcm91cHMgPSB0aGlzLmNoYXJ0CiAgICAgICAgLnNlbGVjdEFsbCgncmVjdCcpCiAgICAgICAgLmRhdGEoaXNzdWVzVmFsKQogICAgICAgIC5lbnRlcigpCgogICAgICBiYXJHcm91cHMKICAgICAgICAuYXBwZW5kKCdyZWN0JykKICAgICAgICAuYXR0cignY2xhc3MnLCAnYmFyJykKICAgICAgICAuYXR0cigneCcsIGcgPT4geFNjYWxlKGcuaXNzdWUpKQogICAgICAgIC5hdHRyKCd5JywgZyA9PiB5U2NhbGUoZy5wZXJjZW50YWdlKSkKICAgICAgICAuYXR0cignaGVpZ2h0JywgZyA9PiBjaGFydEhlaWdodCAtIHlTY2FsZShnLnBlcmNlbnRhZ2UpKQogICAgICAgIC5hdHRyKCd3aWR0aCcsIHhTY2FsZS5iYW5kd2lkdGgoKSkKICAgICAgICAuY2xhc3NlZCgnc2VsZWN0ZWQnLCBkID0+IHsKICAgICAgICAgIHJldHVybiBfLmlzRXF1YWwoZC5pc3N1ZSwgc2VsZWN0ZWRJc3N1ZSkKICAgICAgICB9KQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["BarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BarChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"flex-container\">\n    <div>\n      <h2>People state...</h2>\n      <p>The following bar chart is reflective of the consciously stated survey data. Participants were asked ‘What do you think are the most important issues this election?’ and were not limited to one selection. The results of the question highlight five key issues that are important to a minimum of 50% of the sample: healthcare, climate change, the economy, education and immigration.</p>\n    </div>\n    <div id=\"svg-container\">\n      <p id=\"percentage\">{{ formattedPercentage }} state that they care about</p>\n      <select v-model=\"selectedIssue\">\n        <option v-for=\"issue in issues\" v-bind:key=\"issue.issue\">{{ issue.issue }}</option>\n      </select>\n      <svg />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  select,\n  scaleLinear,\n  axisBottom,\n  axisLeft,\n  scaleBand,\n  format,\n} from 'd3'\nimport _ from 'lodash'\nexport default {\n  props: ['issues'],\n  data() {\n    return {\n      chart: null,\n      selectedIssue: null,\n    }\n  },\n  computed: {\n    formattedPercentage: function() {\n      if (_.isNil(this.selectedIssue)) {\n        return ''\n      }\n      const issueObj = _.find(this.issues, i => i.issue === this.selectedIssue)\n      return format('.0%')(issueObj.percentage)\n    },\n  },\n  watch: {\n    issues(val) {\n      if (this.chart !== null) this.chart.remove()\n      this.renderChart(val, this.selectedIssue)\n      this.selectedIssue = _.first(val).issue\n    },\n    selectedIssue(val) {\n      if (this.chart !== null) this.chart.remove()\n      this.renderChart(this.issues, val)\n    },\n  },\n  methods: {\n    renderChart(issuesVal, selectedIssue) {\n      const container = select('#svg-container').node()\n      const margin = 60\n      const svgWidth = container.clientWidth\n\n      const svgHeight = svgWidth * 0.6\n      const chartWidth = svgWidth - 2 * margin\n      const chartHeight = svgHeight - 2 * margin\n\n      const svg = select('svg')\n        .attr('width', svgWidth)\n        .attr('height', svgHeight)\n\n      this.chart = svg\n        .append('g')\n        .attr('transform', `translate(${margin},${margin})`)\n\n      const yScale = scaleLinear()\n        .range([chartHeight, 0])\n        .domain([0, _.maxBy(issuesVal, 'percentage').percentage])\n\n      this.chart.append('g').call(axisLeft(yScale).ticks(0))\n\n      const xScale = scaleBand()\n        .range([0, chartWidth])\n        .domain(issuesVal.map(s => s.issue))\n        .padding(0.2)\n\n      this.chart\n        .append('g')\n        .attr('transform', `translate(0, ${chartHeight})`)\n        .call(\n          axisBottom(xScale)\n            .ticks(0)\n            .tickValues([])\n        )\n\n      const barGroups = this.chart\n        .selectAll('rect')\n        .data(issuesVal)\n        .enter()\n\n      barGroups\n        .append('rect')\n        .attr('class', 'bar')\n        .attr('x', g => xScale(g.issue))\n        .attr('y', g => yScale(g.percentage))\n        .attr('height', g => chartHeight - yScale(g.percentage))\n        .attr('width', xScale.bandwidth())\n        .classed('selected', d => {\n          return _.isEqual(d.issue, selectedIssue)\n        })\n    },\n  },\n}\n</script>\n<style>\n#flex-container {\n  padding-top: 150px;\n  padding-bottom: 200px; \n  padding-left: 63px;\n  display: flex;\n  text-align: left;\n}\n\n#flex-container > div {\n  flex: 50%;\n}\n#flex-container h2 {\n  margin-bottom: 40px;\n  font-weight: 700; \n}\n#flex-container p {\n  line-height: 125%;\n  width: 65%;\n}\n#flex-container #percentage {\n  display: inline;\n  margin-right: 2px;\n  font-size: 1.2rem;\n  font-weight: 700;\n}\n\n#flex-container select {\n  background-color: transparent;\n  border: none;\n  outline: none;\n  color: #da3767;\n  border-bottom: 1px white solid;\n  font-size: 1.2rem;\n  font-weight: 700;\n  border-radius: 0;\n}\nselect::-ms-expand {\n  display: none;\n}\n\n.bar {\n  fill: #ffffff;\n}\n\n.bar.selected {\n  fill: #da3767;\n}\n</style>\n"]}]}